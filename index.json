[{"content":"This post describes the creation process of this website. I have used the popular static site generator Hugo. Hugo is based on the language go. Disclaimer: this is the second time I am creating my website using Hugo. But the last time I created this was in 2015, so a lot has changed.\nInstalling Hugo on Windows 10 My recommendation is to use Chocolatey to install Hugo although there are binaries available at github for direct installation. If Chocolatey is installed on your system, open powershell by right clicking the start button. There type\nchococ install hugo to install Hugo. Now are ready to use Hugo commands from the powershell. To check if the installtion went well type hugo version. It will display the current version of Hugo.\nUsing Hugo One way to quickly learn how to use Hugo is to follow the quickstart guide over at the Hugo website. There is one problem, with the echo command, I encountered while applying it on Windows 10. For completeness I will describe all the steps involved.\nWe begin by creating a directory with the necessary structure for our website. I stated by creating a practice folder called quickstart using\nhugo new site quickstart Then type\ncd quickstart to move into the newly created directory.\nNext we add a theme to our website. We will add the Ananke theme using git.\ngit init git submodule add https://github.com/budparr/gohugo-theme-ananke.git themes/ananke More themes are available at themes.hugo.io. If you don\u0026rsquo;t have git installed you can also download the themes from there, and extract the compressed folder into the themes folder in your site\u0026rsquo;s directory. Using git is higly recommended.\nTake a look in the themes folder in your site\u0026rsquo;s directory. There should be a folder named ananke inside. Go back to the quickstart directory and open the config.toml file in your faourite text editor. I am using Atom. Add\ntheme = \u0026quot;ananke\u0026quot; to the end of your config file.\nNow your website is essentially ready. Let\u0026rsquo;s add our first post. Type the following command on the powershell\nhugo new posts/my-first-post.md This will create a markdownfile named my-first-post.md in the content\u0026gt;posts. Open it in a text editor. You will notice that the file already contains the following:\n--- title: \u0026quot;My First Post\u0026quot; date: 2021-02-27T16:42:29+05:30 draft: true --- The title is going to be the title of your blog post, date is the time when your file was created, and \u0026lsquo;draft\u0026rsquo; represents whether or no your post is published. Change draft to false when you are happy with the content.\nEven when draft is set to true, you can see how it will look on you website by typing the folloing in the powershell.\nhugo server -D image\nClick on the link displayed to see the current status of your website. Make your changes. Once you are happy with your changes, build your site by typing the following in your powershell\nhugo Your website is published in the public folder in your website directory.\nCreating your Website ","permalink":"https://harshcurious.github.io/posts/hugocreation/","summary":"This post describes the creation process of this website. I have used the popular static site generator Hugo. Hugo is based on the language go. Disclaimer: this is the second time I am creating my website using Hugo. But the last time I created this was in 2015, so a lot has changed.\nInstalling Hugo on Windows 10 My recommendation is to use Chocolatey to install Hugo although there are binaries available at github for direct installation.","title":"Creating This Website Using Hugo on Windows 10"},{"content":"My Failed Attempt at Setting Up This Website Using Franklin (On Windows) I will be using Franklin based on Julia because\n I wanted to learn Julia I wanted to use markdown (or somethng similar) with LaTeX support automatically I wanted to see if the promises of KaTeX rendering hold water Code highlighting was another bonus  Installing Julia on Windows 10 To do this I first installed Julia using Chocolatey with the command\n choco install julia \u0026ndash;confirm\n In reality I first used the official Julia insaller, but by default it installs Julia in a folder with the version number. This makes it really hard to add it to your PATH in the Powershell. Chocolatey on the other hand, handles it all for you and you can start using Julia by typing julia on the Powershell prompt. Also, updating Julia will be way easier, just run the command choco upgrade julia --confirm.\nSetting Up Atom to use as my markdown editor I have borrowed a lot of what I am sharing from these two wonderful resources 1 and 2.\nInstall (using the installer at Atom.io) and open Atom. Close all the welcome messages (after reading them if you feel like it). Click File \u0026raquo; Settings. Now go to the install option and search and install the following packages\n markdown-writer : improves the markdown editing process especially for static blogs markdown-preview-plus : provides real-time preview of markdown with LaTeX support language-markdown : Adds grammar support for Markdown, and smart context-aware behavior to lists autosave : protects your work by saving it periodically highlightselected : highlights occurance of the selected word linter-retextjs : gives feedback on your writing pandoc-convert : if you want to directly convert your markdown file into HTML auto-terminal-powershell : open powershell terminal in the current file\u0026rsquo;s directory wordcount : if you want to see the wordcount of your document  If you have never written in markdown before, this is an excellent resourse. I am using this markdownguide page as my reference for markdown syntax.\nInstalling Franklin First type julia in the powershell to get to the Julia prompt julia\u0026gt;. Them press ] to get to pkg, julia\u0026rsquo;s package manager. You prompt will change to (@v1.5) pkg\u0026gt;. Now type\nadd Franklin and Franklin package will be installed. Once this package is intalled, (optionally) install the NodeJS package\nadd NodeJS Now the nest commands on the official website are clearly for linux\nusing NodeJS run(`sudo $(npm_cmd())install highlight.js`) I wasn\u0026rsquo;t able to modify it to get it to work for me. This is the point where I gave up. My Node.js is in D directory whereas the julia directory is C. I will have to edit the NodeJS.jl file to make this work. I don\u0026rsquo;t wanna do that right now. Maybe someday I will get back to it. I did set up atom to use markdown which is great.\n","permalink":"https://harshcurious.github.io/posts/franklinfail/","summary":"My Failed Attempt at Setting Up This Website Using Franklin (On Windows) I will be using Franklin based on Julia because\n I wanted to learn Julia I wanted to use markdown (or somethng similar) with LaTeX support automatically I wanted to see if the promises of KaTeX rendering hold water Code highlighting was another bonus  Installing Julia on Windows 10 To do this I first installed Julia using Chocolatey with the command","title":"FranklinFail"}]