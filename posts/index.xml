<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on harshcurious</title><link>https://harshcurious.com/posts/</link><description>Recent content in Posts on harshcurious</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Tue, 19 Dec 2023 16:46:59 +0530</lastBuildDate><atom:link href="https://harshcurious.com/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Restart</title><link>https://harshcurious.com/posts/restart/</link><pubDate>Tue, 19 Dec 2023 16:46:59 +0530</pubDate><guid>https://harshcurious.com/posts/restart/</guid><description>I am reframing the goals of this blog.
For a long time I wanted to create content like 3Blue1Brown or Math3ma. Short and insightful. Most importantly something brand new. I new way to look at something. Something unique. But I have come to the realization that I am not capable of that. At least not yet.
Also looking at the history of all the creators I admire, they have some terrible stuff under their belt.</description></item><item><title>Mean_variants</title><link>https://harshcurious.com/posts/mean_variants/</link><pubDate>Mon, 12 Sep 2022 15:04:10 +0530</pubDate><guid>https://harshcurious.com/posts/mean_variants/</guid><description>Mean and It&amp;rsquo;s Variants Book Recommendation I started reading the book Practical Statistics for Data Scientists. I had read the time series portion of it during a work project, and put it on my to read list. I am finally getting around to it and I am really enjoying it so far. If you need like a quick overview of a lot of stats ideas this is great.
If you have seen stat/math like it and want a quick referesher/introduction than great.</description></item><item><title>Cleaning conda package cache</title><link>https://harshcurious.com/posts/clean_conda_cache/</link><pubDate>Mon, 14 Feb 2022 14:27:52 +0530</pubDate><guid>https://harshcurious.com/posts/clean_conda_cache/</guid><description>Source: https://stackoverflow.com/questions/36308531/how-to-uninstall-all-unused-packages-in-a-conda-virtual-environment
If you are anything like me you start multiple data science projects. To make things a little easier I make multiple conda environments. Conda does a decent job at reducing the space used my the packages[^symlinks]. But over time the conda folders can become boated. It&amp;rsquo;s a good idea to do this regularly.
conda clean --yes --all The all flag clears packages, and tarball used in the installation process.</description></item><item><title>Application Menu Shortcut KDE</title><link>https://harshcurious.com/posts/applicationmenushortcutkde/</link><pubDate>Mon, 14 Feb 2022 14:22:58 +0530</pubDate><guid>https://harshcurious.com/posts/applicationmenushortcutkde/</guid><description>Option 1: GUI Right click on the app launcher and select Edit Applications from the menu. This should launch a menu editor. Make the desired edits and save them.
Option 2: Terminal The menu applications are stored in /usr/share/applications/. If you want to make an edit to an existing application, edit the file: application_NAME.desktop. You can search for it using: ls | grep 'search_term'.[^ripgep] Don&amp;rsquo;t forget to use sudo for editing the file.</description></item><item><title>JupyterLab Python Environments</title><link>https://harshcurious.com/posts/jupyterlab_environment/</link><pubDate>Mon, 14 Feb 2022 14:17:53 +0530</pubDate><guid>https://harshcurious.com/posts/jupyterlab_environment/</guid><description>Adding Environments to JupyterLab Source: https://janakiev.com/blog/jupyter-virtual-envs/
Activate the environment: conda activate my_env Install ipykernel in your environment. Using: pip install --user ipykernel conda install -c conda-forge ipykernel Run the following to add the current kernel1 to jupyterlab installation in base environment: python -m ipykernel install --user --name=udemy-data-science Removing Environments from JupyterLab Check the list using: jupyter kernelspec list Remove a kernel using: jupyter kernelspec uninstall myenv So don&amp;rsquo;t forget to activate the environment first.</description></item><item><title>How to remove subfolders/subdirectories from git tracking</title><link>https://harshcurious.com/posts/gitignore_subfolder/</link><pubDate>Sat, 25 Dec 2021 10:00:42 +0530</pubDate><guid>https://harshcurious.com/posts/gitignore_subfolder/</guid><description>From https://stackoverflow.com/questions/2545602/how-to-git-ignore-subfolders-subdirectories
To ignore Solutions/projects/bin/Debug but not bin/Debug
Solution/*/bin/Debug you can also use the ** wildcard to match any level of subdirectories:
**/bin/Debug/ Bonus Content: Remove existing git tracked files Now say you had a folder (commited to your git repository) that you now wanted to remove altogether from your repository. First add it to your gitignore file. Then do one of the following steps.
https://stackoverflow.com/questions/7075923/resync-git-repo-with-new-gitignore-file
Extreme
git rm -r --cachedgit add .</description></item><item><title>Some basic experiments with the pandas' append command</title><link>https://harshcurious.com/posts/pandas_append/</link><pubDate>Fri, 24 Dec 2021 12:04:10 +0530</pubDate><guid>https://harshcurious.com/posts/pandas_append/</guid><description>Understanding Commands: pandas.append() Basic Usage &amp;gt;&amp;gt;&amp;gt; import pandas as pd &amp;gt;&amp;gt;&amp;gt; df = pd.DataFrame([[1, 2], [3, 4]], columns=list(&amp;#39;AB&amp;#39;), index=[&amp;#39;x&amp;#39;, &amp;#39;y&amp;#39;]) &amp;gt;&amp;gt;&amp;gt; df2 = pd.DataFrame([[5, 6], [7, 8]], columns=list(&amp;#39;AB&amp;#39;), index=[&amp;#39;x&amp;#39;, &amp;#39;y&amp;#39;]) &amp;gt;&amp;gt;&amp;gt; df.append(df2) A B x 1 2 y 3 4 x 5 6 y 7 8 &amp;gt;&amp;gt;&amp;gt; df A B x 1 2 y 3 4 &amp;gt;&amp;gt;&amp;gt; new = df.append(df2) &amp;gt;&amp;gt;&amp;gt; new A B x 1 2 y 3 4 x 5 6 y 7 8 &amp;gt;&amp;gt;&amp;gt; df A B x 1 2 y 3 4 &amp;gt;&amp;gt;&amp;gt; df2 A B x 5 6 y 7 8 &amp;gt;&amp;gt;&amp;gt; new.</description></item><item><title>The Source of My Social Sciences Hate</title><link>https://harshcurious.com/posts/social-sciences-hate/</link><pubDate>Sun, 27 Jun 2021 19:56:09 +0530</pubDate><guid>https://harshcurious.com/posts/social-sciences-hate/</guid><description>Recently I was reading a beautiful interview of Amartya Sen done by The Harvard Gazette. You can read my higlights over at hypothes.is This reminded me of the first time I read a paper by Amartya Sen.
Back when I was in the ninth grade I was required to do a project for my Social Studies class. The topic allotted to me was &amp;ldquo;Should we have caste based reservation?&amp;rdquo; Heavy stuff 😩, especially for my 14-year-old ass.</description></item><item><title>Book Review: Brief Interviews with Hideous Men</title><link>https://harshcurious.com/posts/briefinterviewhideous/</link><pubDate>Sun, 30 May 2021 17:47:15 +0530</pubDate><guid>https://harshcurious.com/posts/briefinterviewhideous/</guid><description>Brief Interviews with Hideous Men by David Foster WallaceMy rating: 5 of 5 stars
I enjoyed it, but it was a tough read. Unlike what the title might suggest this book is a collection of short stories. Some, but not all, of them are structured like interviews. Some, but not all, focus on a male character. Some, but not all, are about awful people.
The vibe of the book is that it is a meditation on thinking.</description></item><item><title>Today I Learnt 15</title><link>https://harshcurious.com/posts/til15/</link><pubDate>Mon, 24 May 2021 15:57:18 +0530</pubDate><guid>https://harshcurious.com/posts/til15/</guid><description>healthygamer.gg Interview with Sasha Grey Being a Potential Cult Leader People come to Grey with her problems since she was 11. Difference between a person who is a therapist and who helps other people with their problems. Training; expertise; limitations. If a therapist can&amp;rsquo;t stream on Twitch, then under qualified people will do that job of giving advice. The more qualified you are, the less you are allowed to do the public advice action.</description></item><item><title>Book Review: Lolita</title><link>https://harshcurious.com/posts/lolita/</link><pubDate>Wed, 19 May 2021 13:49:14 +0530</pubDate><guid>https://harshcurious.com/posts/lolita/</guid><description>Lolita: Book review Lolita by Vladimir NabokovMy rating: 3 of 5 stars
Pretty average. There are some impressive passages, with well flowing language. Overall didn't enjoy the story, and characterization. The ending was utterly bizarre. Disappointed. I guess the hype is because of the transgressive nature of the story, and not for its actual content.</description></item><item><title>Today I Learnt 14</title><link>https://harshcurious.com/posts/til14/</link><pubDate>Mon, 17 May 2021 20:26:45 +0530</pubDate><guid>https://harshcurious.com/posts/til14/</guid><description>The State of Indian Economy https://www.hindustantimes.com/india-news/the-economy-story-is-unravelling-just-46-days-into-fy22-101621203348452.html
The recent surge in COVID-19 cases has also manged to crush the economic recovery hopes. Although there hasn&amp;rsquo;t been a three-month national lockdown, there are local lockdowns almost everywhere in the country. Google Mobility Data Google LLC &amp;ldquo;Google COVID-19 Community Mobility Reports&amp;rdquo;. https://www.google.com/covid19/mobility/ Accessed: May 17, 2021.
https://www.gstatic.com/covid19/mobility/2021-05-13_IN_Mobility_Report_en-GB.pdf
The workplace mobility has fallen sharply (by about 54%) since its peak in March 2021.1 Retail and recreation related mobility is down by a whopping 63%.</description></item><item><title>Today I Learnt 13</title><link>https://harshcurious.com/posts/til13/</link><pubDate>Wed, 12 May 2021 17:06:34 +0530</pubDate><guid>https://harshcurious.com/posts/til13/</guid><description>India&amp;rsquo;s Covid-19 Emergency The situation is scary. Very scary. It has spread to the rural areas. There is severe lack of information and resources. There are a lot of quacks who can wreak havoc in the current climate of misinformation. The biggest fake Guru Ramdev has shown his true colors by blaming the victims of Covid-19 for all their breathing issues. We have RSS workers followed by our honorable PM dying without treatment.</description></item><item><title>Today I Learnt 12</title><link>https://harshcurious.com/posts/til12/</link><pubDate>Tue, 11 May 2021 13:17:46 +0530</pubDate><guid>https://harshcurious.com/posts/til12/</guid><description>Learning Kotlin Creating variables Notes from: https://www.programiz.com/kotlin-programming/variable-types and
You can define variables dynamically:
var firstname = &amp;#34;Harsh&amp;#34; var lastname = &amp;#34;Kumar&amp;#34; var age = 26 var happiness = 0.1 You can specify the type:
var firstname:String = &amp;#34;Harsh&amp;#34; var age:Int = 43 Kotlin variables can be declared in two ways:
val: Immutable. var: Mutable. Basic variable types (https://kotlinlang.org/docs/basic-types.html)
Numerical types: 6 built-in types
Byte: values between -128 and 127 Short: values between -32768 and 32767 (16-bit signed two&amp;rsquo;s complement integer).</description></item><item><title>Today I Learnt 11</title><link>https://harshcurious.com/posts/til11/</link><pubDate>Sun, 18 Apr 2021 12:19:03 +0530</pubDate><guid>https://harshcurious.com/posts/til11/</guid><description>Python List Operations If we start with a list
seq = [1,2,3,4] then we have the following operations:
Python Expression Results Descriptions seq + [5,6,7,8] [1,2,3,4,5,6,7,8] Concatenation seq * 4 [1,2,3,4,1,2,3,4,1,2,3,4,1,2,3,4] Repetition Go 101 This is a continuation of my notes on learning Go.
Keywords From Go 101 Go has precisely 25 keywords: break default func interface select case defer go map struct chan else goto package switch const fallthrough if range type continue for import return var Identifiers Composed of Unicode letters, Unicode digits and _ (underscore)</description></item><item><title>Today I Learnt 10</title><link>https://harshcurious.com/posts/til10/</link><pubDate>Fri, 16 Apr 2021 15:36:34 +0530</pubDate><guid>https://harshcurious.com/posts/til10/</guid><description>Lambda Functions in Python First I looked at the following article from realpython.com History Lambda calculus (or $\lambda$-calculus) is a formal system in mathematical logic for expressing computation based on function abstraction and application using variable binding and substitution.1
It is a universal model of computation. Alternative to a Turing Machine.
Until the 1960s, the lambda calculus was only a formalism. Since Richard Montague and other linguists&amp;rsquo; applied it in understanding the semantics of natural language, the lambda calculus has gained popularity in both linguistics, and computer science.</description></item><item><title>Today I Learnt 9</title><link>https://harshcurious.com/posts/til9/</link><pubDate>Thu, 15 Apr 2021 12:49:06 +0530</pubDate><guid>https://harshcurious.com/posts/til9/</guid><description>Go 101 Continued The simplest Go program:
package main func main() { } The first line package main specifies the package name (main here) of the containing source file.
I just don&amp;rsquo;t understand this statement.
Let me go back to the other book I was reading (Go in action). There I found the following statement:
For the build tools to produce an executable, the function main must be declared, and it becomes the entry point for the program.</description></item><item><title>Today I Learnt 8</title><link>https://harshcurious.com/posts/til8/</link><pubDate>Tue, 13 Apr 2021 13:05:02 +0530</pubDate><guid>https://harshcurious.com/posts/til8/</guid><description>Go 101 This sets more realistic expectations about Golang.
About Go 101 Main selling point of Golang:
Fairly flexible for a static language. Unique combination of memory saving, fast program warming-up and fast code execution speed. Built-in concurrent programming support. Great code readability. Great cross-platform support. Vibrant group. I didn&amp;rsquo;t quite understand how this particular book is useful. He says a few things about it, but I did not understand it.</description></item><item><title>Today I Learnt 7</title><link>https://harshcurious.com/posts/til7/</link><pubDate>Mon, 12 Apr 2021 10:12:57 +0530</pubDate><guid>https://harshcurious.com/posts/til7/</guid><description>Banana Pi M5 Learned of its existence from Explaining Computers Has onboard eMMC storage. SOC: Amlogic S905X3 with 4 x A55 cores (up to 2GHz), Mali-G31 MP2 GPU. Can boot from 16 GB eMMC or SD Card slot. Uses USB-C for power (5V @ 2A) and eMMC setup. Has 4 switch (The wiki says 3 : Reset, Power and U-Boot 😕). 4 GB LPDDR4 RAM. 10/100/1000 Mbit/s Ethernet. Wi-Fi/Bluetooth requires an optional USB dongle.</description></item><item><title>Today I Learnt 6</title><link>https://harshcurious.com/posts/til6/</link><pubDate>Sun, 11 Apr 2021 14:28:04 +0530</pubDate><guid>https://harshcurious.com/posts/til6/</guid><description>Thoughts Regarding My RSS Feed Emotinality as a predictor for cultural success Found orignally from marginal revolution. Couldn&amp;rsquo;t access the article 😪 This sounds very interesting AdaFruit Lately I have been really interested in using more sensors and display for my Raspberry Pi, but everything is so f**ing expensive. I don&amp;rsquo;t know if I can buy anything. One thing I definitely am going to try is make a pir activated night light using Pico and Led matrix.</description></item><item><title>Today I Learnt 5</title><link>https://harshcurious.com/posts/til5/</link><pubDate>Tue, 06 Apr 2021 11:17:24 +0530</pubDate><guid>https://harshcurious.com/posts/til5/</guid><description>Open Source Smart Watch Very similar to another project I have already heard about called the Watchy Made by Paul Smith with news over at Hackster.io. The project has a website and a GitHub organization. It has got a micro-USB port for data transfer and charging. The main one has a SD-card slot for data storage. The lite one has no SD-card slot. The components used are: EPS32-micro-D4: 2×240 MHz, 320 KB RAM Bluetooth 4.</description></item><item><title>Today I Learnt 4</title><link>https://harshcurious.com/posts/til4/</link><pubDate>Mon, 05 Apr 2021 09:37:47 +0530</pubDate><guid>https://harshcurious.com/posts/til4/</guid><description>Industry TV series Just brilliant. The complexities of all the relationships and actions is well thought out. The decisions made were well suited to the characters. It was all around just a well made show. I am impressed. Would recommend to all most anyone. The only point against it is that it has a very cynical worldview
My notes from The Basics of CSS: Selectors Websites are composed of
HTML : A markup language.</description></item><item><title>Today I Learnt 3</title><link>https://harshcurious.com/posts/til3/</link><pubDate>Sun, 04 Apr 2021 12:07:42 +0530</pubDate><guid>https://harshcurious.com/posts/til3/</guid><description>Arsenal vs Liverpool Oh well, Arsenal suck.
Superstore S05E02/E03 Deals with contemporary work related issues in US in a hilarious way. Much better than The Office. Much more diversity and much more realistic. Looks of Webhosting services This freeCodeCamp.org youtube lecture gives a good look of the the website hosting process at this moment in time.
Anki There are a huge number of improvements in Anki since I last used it.</description></item><item><title>Today I Learnt 2</title><link>https://harshcurious.com/posts/til2/</link><pubDate>Wed, 31 Mar 2021 11:26:01 +0530</pubDate><guid>https://harshcurious.com/posts/til2/</guid><description>Awesome Browser Addons Learnt about some new and interesting Firefox addons (probably available for other browsers).
Violent Monkey : Kinda like greasemonkey or tampermonkey. Open source. Let&amp;rsquo;s you run userscripts (basically Javascript assets) to change functionality on a website. It is getting updated regularly on github. LocalCDN : This could be rather interesting especially if I can do it on my pi hole. For now I have added it to Brave via the unofficial build for chromium browsers.</description></item><item><title>Today I Learnt 1</title><link>https://harshcurious.com/posts/til1/</link><pubDate>Thu, 25 Mar 2021 19:46:43 +0530</pubDate><guid>https://harshcurious.com/posts/til1/</guid><description>The second wave of coronavirus is here in India I read this article from indian express in the morning. The daily cases yesterday were over 50000 for the first time since November. There are reported cases of multiple new variants (in a situation were DNA sequencing is extremely rare).
The situation is frightening, especially some of the new variants being able to evade the immune system much more efficiently. I have been wearing a mask in public spaces at all times, but nobody else seems to be interested in doing so.</description></item><item><title>My Experiments with Raspberry Pi: Part 1</title><link>https://harshcurious.com/posts/rpi20thmarch21/</link><pubDate>Sat, 20 Mar 2021 13:39:03 +0530</pubDate><guid>https://harshcurious.com/posts/rpi20thmarch21/</guid><description>Today I am going to run a 7 segment display off of raspberry pi 4.
The code I ran #!/usr/bin/env python import RPi.GPIO as GPIO import time pins = [11,12,13,15,16,18,22,7] dats = [0x3f,0x06,0x5b,0x4f,0x66,0x6d,0x7d,0x07,0x7f,0x6f,0x77,0x7c,0x39,0x5e,0x79,0x71,0x80] def setup(): GPIO.setmode(GPIO.BOARD) for pin in pins: GPIO.setup(pin, GPIO.OUT) # Set pin mode as output GPIO.output(pin, GPIO.LOW) def writeOneByte(val): GPIO.output(11, val &amp;amp; (0x01 &amp;lt;&amp;lt; 0)) GPIO.output(12, val &amp;amp; (0x01 &amp;lt;&amp;lt; 1)) GPIO.output(13, val &amp;amp; (0x01 &amp;lt;&amp;lt; 2)) GPIO.</description></item><item><title>Kolmogorov Arnold Representation Theorem</title><link>https://harshcurious.com/posts/mathneuralnetwork/</link><pubDate>Wed, 17 Mar 2021 14:59:43 +0530</pubDate><guid>https://harshcurious.com/posts/mathneuralnetwork/</guid><description>The most surprizing aspect of neural networks is their simplicity. I don&amp;rsquo;t mean that the whole of a neural network is simple. It is not. But at any given instant you are either adding numbers or applying a function on one number (a single variable function). Why these two kinds of operations will give you any old function of multiple variables is a mystry to me! Let me take a small step towards understanding this by reading this really old paper by Kolmogrov.</description></item><item><title>Let's get Go-ing</title><link>https://harshcurious.com/posts/gointro/</link><pubDate>Mon, 08 Mar 2021 22:04:51 +0530</pubDate><guid>https://harshcurious.com/posts/gointro/</guid><description>Why Go? Computer evolution more cores programming languages based on one core programming Programming workflow evolution not written by single developer written at different times programmers write library or package to be used elsewhere open source code needs to be shared Go rethinks object-oriented development allows for code reuse let&amp;rsquo;s you use all cores no need to recompile evrytime. Learn concurrency model fast compiler syntax type system concurrency channels testing, etc How Modern programming challenges Go away Currently choice between rapid development : Ruby, python fast execution : C, C++.</description></item><item><title>First look at Go In Action</title><link>https://harshcurious.com/posts/gofirstlook/</link><pubDate>Mon, 08 Mar 2021 21:12:59 +0530</pubDate><guid>https://harshcurious.com/posts/gofirstlook/</guid><description>Foreward Created by Rob Pike, Robert Griesmier, and Ken Thompson other contributions include UNIX, Java&amp;rsquo;s JVM Hotspot, Strontalk, UTF8 Open-sourse 2013: Gopher Academy; building community around Go. Go discussion board (slack) Gopher Academy blog GopherCon Go In Action Preface Began as GoingGo.net blog Member of founding team of Go reviewed suggested changes shared expertise Community effort ever scince About the Book Go is simple makes simple reliable and efficient software ides from existing languages unique and simple balances low-level language features, and high-level language features Book For intermediate level Requires experince with programming Goal intensive comprehensive idiomatic Focus on both specification, around implementation Topics include: syntax type system concurrency channel testing, etc Overview: Chapter 1 What is Go?</description></item><item><title>Microsoft Terminal: My Customizations</title><link>https://harshcurious.com/posts/microsoftterminal/</link><pubDate>Sun, 07 Mar 2021 15:17:14 +0530</pubDate><guid>https://harshcurious.com/posts/microsoftterminal/</guid><description>What is Microsoft Terminal?</description></item><item><title>What are Strings in Python</title><link>https://harshcurious.com/posts/pythonstrings/</link><pubDate>Sun, 07 Mar 2021 15:06:35 +0530</pubDate><guid>https://harshcurious.com/posts/pythonstrings/</guid><description>It&amp;rsquo;s a Sequence, a Sequence of Characters Can access the characters using the braket operator
&amp;gt;&amp;gt;&amp;gt; fruit = &amp;#39;banana&amp;#39; &amp;gt;&amp;gt;&amp;gt; letter = fruit[1] &amp;gt;&amp;gt;&amp;gt; print(letter) a You get that fruit[1] is a, the second letter in the string. Remeber counting starts from 0 in Python.
the number inside the bracket is called the index. Indeces can be negative. But index $\in [-length+1, length -1]$. len is the built-in function which gives the length of a string.</description></item><item><title>How to Iterate in Python</title><link>https://harshcurious.com/posts/pythoniteration/</link><pubDate>Thu, 04 Mar 2021 10:48:28 +0530</pubDate><guid>https://harshcurious.com/posts/pythoniteration/</guid><description>The while loop It allows you to repeat a set of actions until a statement is true. Eg:
n = 5 while n &amp;gt; 0: print(n) n = n - 1 print(&amp;#39;Blastoff!&amp;#39;) This is executed as follows
Creates and sets n to 5. Goes to the while statement and checks if n is greater than 0. Right now it&amp;rsquo;s true, so we move inside the loop. Prints n, ie outputs 5.</description></item><item><title>Learning Python: Functions</title><link>https://harshcurious.com/posts/pythonfunction/</link><pubDate>Wed, 03 Mar 2021 13:25:35 +0530</pubDate><guid>https://harshcurious.com/posts/pythonfunction/</guid><description>What is a Function A function takes a set of inputs and produces an output. Eg:
&amp;gt;&amp;gt;&amp;gt;type(32) &amp;lt;class &amp;#39;init&amp;#39;&amp;gt; Here type is a function that takes 32 as an input and produces its class.
Some Built-in functions max : gives the “largest character” in the string
&amp;gt;&amp;gt;&amp;gt;max(&amp;#39;Hello world&amp;#39;) &amp;#39;w&amp;#39; min : gives the “smallest character” in the string
&amp;gt;&amp;gt;&amp;gt;min(&amp;#39;Hello world&amp;#39;) &amp;#39; &amp;#39; len : gives the number of characters in the string</description></item><item><title>Creating This Website Using Hugo on Windows 10</title><link>https://harshcurious.com/posts/hugocreation/</link><pubDate>Sun, 28 Feb 2021 13:04:04 +0530</pubDate><guid>https://harshcurious.com/posts/hugocreation/</guid><description>This post describes the creation process of this website. I have used the popular static site generator Hugo. Hugo is based on the language go. Disclaimer: this is the second time I am creating my website using Hugo. But the last time I created this was in 2015, so a lot has changed.
Installing Hugo on Windows 10 My recommendation is to use Chocolatey to install Hugo although there are binaries available at github for direct installation.</description></item><item><title>FranklinFail</title><link>https://harshcurious.com/posts/franklinfail/</link><pubDate>Sat, 27 Feb 2021 17:56:37 +0530</pubDate><guid>https://harshcurious.com/posts/franklinfail/</guid><description>My Failed Attempt at Setting Up This Website Using Franklin (On Windows) I will be using Franklin based on Julia because
I wanted to learn Julia I wanted to use markdown (or somethng similar) with LaTeX support automatically I wanted to see if the promises of KaTeX rendering hold water Code highlighting was another bonus Installing Julia on Windows 10 To do this I first installed Julia using Chocolatey with the command</description></item></channel></rss>