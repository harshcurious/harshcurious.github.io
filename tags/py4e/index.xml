<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>py4e on harshcurious</title>
    <link>https://harshcurious.com/tags/py4e/</link>
    <description>Recent content in py4e on harshcurious</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Thu, 04 Mar 2021 10:48:28 +0530</lastBuildDate><atom:link href="https://harshcurious.com/tags/py4e/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>How to Iterate in Python</title>
      <link>https://harshcurious.com/posts/pythoniteration/</link>
      <pubDate>Thu, 04 Mar 2021 10:48:28 +0530</pubDate>
      
      <guid>https://harshcurious.com/posts/pythoniteration/</guid>
      <description>The while loop It allows you to repeat a set of actions until a statement is true. Eg:
n = 5 while n &amp;gt; 0: print(n) n = n - 1 print(&amp;#39;Blastoff!&amp;#39;) This is executed as follows
 Creates and sets n to 5. Goes to the while statement and checks if n is greater than 0. Right now it&amp;rsquo;s true, so we move inside the loop.  Prints n, ie outputs 5.</description>
    </item>
    
    <item>
      <title>Learning Python: Functions</title>
      <link>https://harshcurious.com/posts/pythonfunction/</link>
      <pubDate>Wed, 03 Mar 2021 13:25:35 +0530</pubDate>
      
      <guid>https://harshcurious.com/posts/pythonfunction/</guid>
      <description>What is a Function A function takes a set of inputs and produces an output. Eg:
&amp;gt;&amp;gt;&amp;gt;type(32) &amp;lt;class &amp;#39;init&amp;#39;&amp;gt; Here type is a function that takes 32 as an input and produces its class.
Some Built-in functions   max : gives the “largest character” in the string
&amp;gt;&amp;gt;&amp;gt;max(&amp;#39;Hello world&amp;#39;) &amp;#39;w&amp;#39;   min : gives the “smallest character” in the string
&amp;gt;&amp;gt;&amp;gt;min(&amp;#39;Hello world&amp;#39;) &amp;#39; &amp;#39;   len : gives the number of characters in the string</description>
    </item>
    
  </channel>
</rss>
