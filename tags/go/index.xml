<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Go on harshcurious</title>
    <link>https://harshcurious.com/tags/go/</link>
    <description>Recent content in Go on harshcurious</description>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 08 Mar 2021 22:04:51 +0530</lastBuildDate><atom:link href="https://harshcurious.com/tags/go/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Let&#39;s get Go-ing</title>
      <link>https://harshcurious.com/posts/gointro/</link>
      <pubDate>Mon, 08 Mar 2021 22:04:51 +0530</pubDate>
      
      <guid>https://harshcurious.com/posts/gointro/</guid>
      <description>Why Go?  Computer evolution  more cores programming languages based on one core programming   Programming workflow evolution  not written by single developer written at different times programmers write library or package to be used elsewhere open source code needs to be shared   Go  rethinks object-oriented development allows for code reuse let&amp;rsquo;s you use all cores no need to recompile evrytime.   Learn  concurrency model fast compiler syntax type system concurrency channels testing, etc    How Modern programming challenges Go away  Currently choice between  rapid development : Ruby, python fast execution : C, C++.</description>
    </item>
    
    <item>
      <title>First look at Go In Action</title>
      <link>https://harshcurious.com/posts/gofirstlook/</link>
      <pubDate>Mon, 08 Mar 2021 21:12:59 +0530</pubDate>
      
      <guid>https://harshcurious.com/posts/gofirstlook/</guid>
      <description>Foreward  Created by Rob Pike, Robert Griesmier, and Ken Thompson  other contributions include UNIX, Java&amp;rsquo;s JVM Hotspot, Strontalk, UTF8   Open-sourse 2013: Gopher Academy; building community around Go.  Go discussion board (slack) Gopher Academy blog GopherCon Go In Action    Preface  Began as GoingGo.net blog Member of founding team of Go  reviewed suggested changes shared expertise   Community effort ever scince  About the Book  Go is  simple makes  simple reliable and efficient software   ides from existing languages unique and simple balances  low-level language features, and high-level language features     Book  For intermediate level Requires experince with programming Goal  intensive comprehensive idiomatic   Focus on both  specification, around implementation   Topics include:  syntax type system concurrency channel testing, etc     Overview:  Chapter 1  What is Go?</description>
    </item>
    
  </channel>
</rss>
